{"version":3,"sources":["components/TabsTable/TabsTable.tsx","components/TabsPage/TabsPage.tsx","App.tsx","index.tsx"],"names":["TabsTable","tabs","selectedTabId","selectedTab","find","tab","id","className","map","title","classNames","to","content","TabsPage","useParams","tabId","App","isActive","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"uPAUaA,EAA6B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAC3CC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAEhD,OACE,qCACE,qBAAKK,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAH,GACR,IAAQI,EAAcJ,EAAdI,MAAOH,EAAOD,EAAPC,GAEf,OACE,oBACE,UAAQ,MACRC,UAAWG,IAAW,CAAE,YAAaJ,IAAOJ,IAF9C,SAIE,cAAC,IAAD,CAAMS,GAAE,gBAAWL,GAAnB,SAA0BG,aAOpC,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EACGA,EAAYS,QACZ,4BChCNX,EAAO,CACX,CAAEK,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,gBAG7BC,EAAW,WACtB,MAAwBC,cAAhBC,aAAR,MAAgB,IAAhB,EAEA,OACE,qCACE,oBAAIR,UAAU,QAAd,uBAEA,cAAC,EAAD,CAAWN,KAAMA,EAAMC,cAAea,QCH/BC,EAAM,kBACjB,qCAEE,qBACET,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEI,GAAG,IACHJ,UAAW,gBAAGU,EAAH,EAAGA,SAAH,OAAkBP,IAC3B,cACA,CAAE,YAAaO,KAJnB,kBAUA,cAAC,IAAD,CACEN,GAAG,QACHJ,UAAW,gBAAGU,EAAH,EAAGA,SAAH,OAAkBP,IAC3B,cACA,CAAE,YAAaO,KAJnB,yBAaN,qBAAKV,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEW,KAAK,IACLC,QAAS,oBAAIZ,UAAU,QAAd,yBAEX,cAAC,IAAD,CACEW,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUR,GAAG,IAAIS,SAAO,MAGnC,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CACEG,OAAK,EACLF,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,SACLC,QAAS,cAAC,EAAD,SAIb,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIZ,UAAU,QAAd,yCClErBe,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.135a172d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n};\n\nexport const TabsTable: React.FC<Props> = ({ tabs, selectedTabId }) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { title, id } = tab;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                className={classNames({ 'is-active': id === selectedTabId })}\n              >\n                <Link to={`/tabs/${id}`}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab\n          ? selectedTab.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { TabsTable } from '../TabsTable';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId = '0' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <TabsTable tabs={tabs} selectedTabId={tabId} />\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { TabsPage } from './components/TabsPage';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'is-active': isActive },\n            )}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home page</h1>}\n          />\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"tabs\">\n            <Route\n              index\n              element={<TabsPage />}\n            />\n            <Route\n              path=\":tabId\"\n              element={<TabsPage />}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}